package main

import (
	"encoding/json"

	"github.com/hyperledger/fabric/core/chaincode/shim"
)

const Advisor_Prefix = "ADV"

//保存定制师信息
func PutAdvisor(stub shim.ChaincodeStubInterface, adv Advisor) ([]byte, bool) {
	//先得到定制师信息序列化
	info, err := json.Marshal(adv)
	if err != nil {
		return nil, false
	}
	//将序列化后的信息存储到couchdb中考虑需要前缀0x00的情形
	key := Advisor_Prefix + adv.AdvisorID
	err = stub.PutState(key, info)
	if err != nil {
		return nil, false
	}

	return info, true
}

//根据定制师Id查询定制师信息状态
func GetAdvisorInfo(stub shim.ChaincodeStubInterface, advisorId string) (Advisor, bool) {
	var adv Advisor
	//由定制师ID查询对应的数据库中的序列化信息
	info, err := stub.GetState(advisorId)
	if err != nil {
		return adv, false
	}
	if info == nil {
		return adv, false
	}
	//反序列化
	err = json.Unmarshal(info, adv)
	if err != nil {
		return adv, false
	}

	return adv, true

}
